[{"E:\\project\\my-app\\src\\index.js":"1","E:\\project\\my-app\\src\\App.js":"2","E:\\project\\my-app\\src\\reportWebVitals.js":"3","E:\\project\\my-app\\src\\components\\Header.js":"4","E:\\project\\my-app\\src\\components\\Navigation.js":"5","E:\\project\\my-app\\src\\components\\Profile.js":"6","E:\\project\\my-social-network\\src\\index.js":"7","E:\\project\\my-social-network\\src\\reportWebVitals.js":"8","E:\\project\\my-social-network\\src\\App.js":"9","E:\\project\\my-social-network\\src\\components\\Header\\Header.js":"10","E:\\project\\my-social-network\\src\\components\\Navigation\\Navigation.js":"11","E:\\project\\my-social-network\\src\\components\\Profile\\MyPosts\\MyPosts.js":"12","E:\\project\\my-social-network\\src\\components\\Profile\\MyPosts\\Post\\Post.js":"13","E:\\project\\my-social-network\\src\\components\\Dialogs\\Dialogs.js":"14","E:\\project\\my-social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.js":"15","E:\\project\\my-social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.js":"16","E:\\project\\my-social-network\\src\\components\\Dialogs\\Message\\Message.js":"17","E:\\project\\my-social-network\\src\\redux\\store.js":"18","E:\\project\\my-social-network\\src\\components\\Profile\\MyPosts\\myPostsContainer.js":"19","E:\\project\\my-social-network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.js":"20","E:\\project\\my-social-network\\src\\components\\Dialogs\\DialogsContainer.js":"21","E:\\project\\my-social-network\\src\\components\\common\\Preloader\\Preloader.jsx":"22","E:\\project\\my-social-network\\src\\components\\Profile\\ProfileContainer.jsx":"23","E:\\project\\my-social-network\\src\\components\\Header\\HeaderContainer.jsx":"24","E:\\project\\my-social-network\\src\\components\\Profile\\Profile.js":"25","E:\\project\\my-social-network\\src\\hoc\\withAuthRedirect.js":"26","E:\\project\\my-social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"27","E:\\project\\my-social-network\\src\\utils\\object-helpers.js":"28","E:\\project\\my-social-network\\src\\hoc\\withSuspense.js":"29","E:\\project\\my-social-network\\src\\redux\\appReducer.ts":"30","E:\\project\\my-social-network\\src\\redux\\authReducer.ts":"31","E:\\project\\my-social-network\\src\\redux\\dialogsReducer.ts":"32","E:\\project\\my-social-network\\src\\redux\\profileReducer.ts":"33","E:\\project\\my-social-network\\src\\redux\\usersReducer.ts":"34","E:\\project\\my-social-network\\src\\redux\\sidebarReducer.ts":"35","E:\\project\\my-social-network\\src\\components\\common\\Paginator\\Paginator.tsx":"36","E:\\project\\my-social-network\\src\\redux\\redux-store.ts":"37","E:\\project\\my-social-network\\src\\components\\Login\\Login.tsx":"38","E:\\project\\my-social-network\\src\\utils\\validators\\validators.ts":"39","E:\\project\\my-social-network\\src\\components\\common\\FormsControls\\FormsControls.tsx":"40","E:\\project\\my-social-network\\src\\api\\api.ts":"41","E:\\project\\my-social-network\\src\\components\\Users\\UsersContainer.tsx":"42","E:\\project\\my-social-network\\src\\redux\\usersSelectors.ts":"43","E:\\project\\my-social-network\\src\\components\\Users\\Users.tsx":"44","E:\\project\\my-social-network\\src\\components\\Users\\User.tsx":"45"},{"size":500,"mtime":499162500000,"results":"46","hashOfConfig":"47"},{"size":348,"mtime":1609942879501,"results":"48","hashOfConfig":"47"},{"size":362,"mtime":499162500000,"results":"49","hashOfConfig":"47"},{"size":243,"mtime":1609942659214,"results":"50","hashOfConfig":"47"},{"size":412,"mtime":1609942729944,"results":"51","hashOfConfig":"47"},{"size":455,"mtime":1609942871550,"results":"52","hashOfConfig":"47"},{"size":226,"mtime":1614344969689,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":499162500000,"results":"55","hashOfConfig":"56"},{"size":2239,"mtime":1615199702254,"results":"57","hashOfConfig":"54"},{"size":577,"mtime":1613481932879,"results":"58","hashOfConfig":"54"},{"size":1010,"mtime":1611236288979,"results":"59","hashOfConfig":"54"},{"size":1412,"mtime":1614327216429,"results":"60","hashOfConfig":"54"},{"size":457,"mtime":1611835505330,"results":"61","hashOfConfig":"54"},{"size":1863,"mtime":1613125942102,"results":"62","hashOfConfig":"54"},{"size":899,"mtime":1614422544811,"results":"63","hashOfConfig":"54"},{"size":477,"mtime":1611835322921,"results":"64","hashOfConfig":"54"},{"size":169,"mtime":1610620173390,"results":"65","hashOfConfig":"54"},{"size":1525,"mtime":1611052115590,"results":"66","hashOfConfig":"56"},{"size":1114,"mtime":1611061899016,"results":"67","hashOfConfig":"56"},{"size":609,"mtime":1613118866925,"results":"68","hashOfConfig":"54"},{"size":914,"mtime":1613116953712,"results":"69","hashOfConfig":"54"},{"size":198,"mtime":1611835658426,"results":"70","hashOfConfig":"54"},{"size":2210,"mtime":1614422565210,"results":"71","hashOfConfig":"54"},{"size":450,"mtime":1613552470816,"results":"72","hashOfConfig":"54"},{"size":446,"mtime":1614422238921,"results":"73","hashOfConfig":"54"},{"size":637,"mtime":1611998078174,"results":"74","hashOfConfig":"54"},{"size":1061,"mtime":1614416506061,"results":"75","hashOfConfig":"54"},{"size":272,"mtime":1614327576558,"results":"76","hashOfConfig":"54"},{"size":304,"mtime":1614415381781,"results":"77","hashOfConfig":"54"},{"size":1082,"mtime":1615037234481,"results":"78","hashOfConfig":"54"},{"size":2209,"mtime":1615193243426,"results":"79","hashOfConfig":"54"},{"size":1176,"mtime":1615040024080,"results":"80","hashOfConfig":"54"},{"size":4105,"mtime":1615042551983,"results":"81","hashOfConfig":"54"},{"size":4646,"mtime":1615203420341,"results":"82","hashOfConfig":"54"},{"size":211,"mtime":1615043819721,"results":"83","hashOfConfig":"54"},{"size":1767,"mtime":1615113177325,"results":"84","hashOfConfig":"54"},{"size":1234,"mtime":1615202556348,"results":"85","hashOfConfig":"54"},{"size":2196,"mtime":1615199897813,"results":"86","hashOfConfig":"54"},{"size":437,"mtime":1615197171414,"results":"87","hashOfConfig":"54"},{"size":1712,"mtime":1615199918946,"results":"88","hashOfConfig":"54"},{"size":2508,"mtime":1615193200605,"results":"89","hashOfConfig":"54"},{"size":3178,"mtime":1615203478258,"results":"90","hashOfConfig":"54"},{"size":847,"mtime":1615109304530,"results":"91","hashOfConfig":"54"},{"size":1138,"mtime":1615112894359,"results":"92","hashOfConfig":"54"},{"size":1512,"mtime":1615194136587,"results":"93","hashOfConfig":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},"1p4hj3j",{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"16jq32h",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"ph6m1v",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"109"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"109"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"109"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"109"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"162"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\project\\my-app\\src\\index.js",[],["197","198"],"E:\\project\\my-app\\src\\App.js",["199"],"E:\\project\\my-app\\src\\reportWebVitals.js",[],"E:\\project\\my-app\\src\\components\\Header.js",["200"],"E:\\project\\my-app\\src\\components\\Navigation.js",["201","202","203","204","205"],"E:\\project\\my-app\\src\\components\\Profile.js",["206"],"E:\\project\\my-social-network\\src\\index.js",[],["207","208"],"E:\\project\\my-social-network\\src\\reportWebVitals.js",[],["209","210"],"E:\\project\\my-social-network\\src\\App.js",[],"E:\\project\\my-social-network\\src\\components\\Header\\Header.js",[],"E:\\project\\my-social-network\\src\\components\\Navigation\\Navigation.js",[],"E:\\project\\my-social-network\\src\\components\\Profile\\MyPosts\\MyPosts.js",["211"],"import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name={\"newPostText\"} validate={[required, maxLength10]} placeholder={\"Post message\"}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map((p, i) => <Post key={i} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>my posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n  });\r\n  \r\n  export default MyPosts;\r\n  ","E:\\project\\my-social-network\\src\\components\\Profile\\MyPosts\\Post\\Post.js",[],"E:\\project\\my-social-network\\src\\components\\Dialogs\\Dialogs.js",["212"],"import { Redirect } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport s from './Dialogs.module.css';\r\nimport Message from './Message/Message';\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field \r\n                    name={\"newMessageBody\"}\r\n                    placeholder={\"Enter your message\"} \r\n                    component={Textarea}\r\n                    validate={[required, maxLength50]}/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map((d, i) => <DialogItem key={i} name={d.name} id={d.id} />);\r\n    let messagesElements = state.messages.map((m, i) => <Message key={i} message={m.message} id={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.onSendMessageClick(values.newMessageBody);\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to={'/login'} />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div> { messagesElements } </div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    );\r\n  }\r\n\r\n  const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n  \r\n  export default Dialogs;","E:\\project\\my-social-network\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.js",[],"E:\\project\\my-social-network\\src\\components\\Dialogs\\DialogItem\\DialogItem.js",[],"E:\\project\\my-social-network\\src\\components\\Dialogs\\Message\\Message.js",[],"E:\\project\\my-social-network\\src\\redux\\store.js",[],["213","214"],"E:\\project\\my-social-network\\src\\components\\Profile\\MyPosts\\myPostsContainer.js",[],"E:\\project\\my-social-network\\src\\components\\Profile\\MyPosts\\MyPostsContainer.js",[],"E:\\project\\my-social-network\\src\\components\\Dialogs\\DialogsContainer.js",[],"E:\\project\\my-social-network\\src\\components\\common\\Preloader\\Preloader.jsx",[],"E:\\project\\my-social-network\\src\\components\\Profile\\ProfileContainer.jsx",["215","216","217"],"import React from 'react';\r\nimport Profile from './Profile'\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { getUserProfile, getUserStatus, updateStatus, savePhoto } from './../../redux/profileReducer';\r\nimport { Redirect, withRouter } from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if(this.props.match.params.userId != this.props.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} \r\n                isOwner={!this.props.match.params.userId}\r\n                profile={this.props.profile} \r\n                status={this.props.status} \r\n                updateStatus={this.props.updateStatus}\r\n                savePhoto={this.props.savePhoto} />\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getProfile: getUserProfile, getUserStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n)(ProfileContainer);\r\n\r\n// let mapStateToPropsForRedirect = (state) => ({\r\n//     isAuth: state.auth.isAuth\r\n// });\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// AuthRedirectComponent = connect(mapStateToPropsForRedirect)(AuthRedirectComponent); // create new Container Component\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent); // return new component profileContainer and put data from URL\r\n\r\n// export default connect(mapStateToProps, {getProfile: getProfileThunkCreator})(WithUrlDataContainerComponent);","E:\\project\\my-social-network\\src\\components\\Header\\HeaderContainer.jsx",[],"E:\\project\\my-social-network\\src\\components\\Profile\\Profile.js",[],"E:\\project\\my-social-network\\src\\hoc\\withAuthRedirect.js",[],"E:\\project\\my-social-network\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",[],"E:\\project\\my-social-network\\src\\utils\\object-helpers.js",["218"],"import { actionTypes } from \"redux-form\"\r\n\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    items.map(u => {\r\n        if(u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","E:\\project\\my-social-network\\src\\hoc\\withSuspense.js",[],"E:\\project\\my-social-network\\src\\redux\\appReducer.ts",[],["219","220"],"E:\\project\\my-social-network\\src\\redux\\authReducer.ts",[],"E:\\project\\my-social-network\\src\\redux\\dialogsReducer.ts",[],"E:\\project\\my-social-network\\src\\redux\\profileReducer.ts",["221"],"import { profileAPI, usersAPI } from '../api/api';\r\nimport { PhotosType, PostType, ProfileType } from '../types/Types';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1,  message: 'Hi, how are you?', likesCount: 15},\r\n        {id: 2,  message: 'Its my first post', likesCount: 23}\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: '',\r\n    newPostText: ''\r\n}\r\n\r\nexport type InitialStateType = typeof initialState;\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch(action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos } as ProfileType}\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\ntype AddPostActionCreatorActionType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorActionType => ({type: ADD_POST, newPostText});\r\n\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE,\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile});\r\n\r\ntype SetStatusActionType = {\r\n    type: typeof SET_STATUS,\r\n    status: string\r\n}\r\nexport const setStatus = (status: string): SetStatusActionType => ({type: SET_STATUS, status});\r\ntype DeletePostActionType = {\r\n    type: typeof DELETE_POST,\r\n    postId: number\r\n}\r\nexport const deletePost = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId});\r\ntype SavePhotoSuccessActionType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS,\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessActionType => ({type: SAVE_PHOTO_SUCCESS, photos});\r\n\r\n// thunk\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n    const response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response));\r\n}\r\n\r\n// export const getUserStatus = (userId) => (dispatch) => {\r\n//     profileAPI.getUserStatus(userId)\r\n//         .then(response => {\r\n//             dispatch(setStatus(response))\r\n//         })\r\n// }\r\n\r\n// export const updateStatus = (status) => (dispatch) => {\r\n//     profileAPI.updateStatus(status)\r\n//         .then(response => {\r\n//             if(response.resultCode === 0) {\r\n//                 dispatch(setStatus(response.status));\r\n//             }\r\n//         })\r\n// }\r\n\r\nexport const getUserStatus = (userId: number) => async (dispatch: any) => {\r\n    const response = await profileAPI.getUserStatus(userId);\r\n    dispatch(setStatus(response));\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n    try {\r\n        const response = await profileAPI.updateStatus(status);\r\n        if(response.resultCode === 0) {\r\n            dispatch(setStatus(response.status));\r\n        }\r\n    } catch(error) {\r\n        alert('error update status');\r\n    }\r\n    \r\n}\r\n\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n    const response = await profileAPI.savePhoto(file);\r\n    if(response.resultCode === 0) {\r\n        dispatch(savePhotoSuccess(response.photos));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","E:\\project\\my-social-network\\src\\redux\\usersReducer.ts",["222","223"],"import { updateObjectInArray } from '../utils/object-helpers';\r\nimport { usersAPI } from '../api/api';\r\nimport { UserType } from '../types/Types';\r\nimport { AppStateType, InferActionsTypes } from './redux-store';\r\nimport { Dispatch } from 'react';\r\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk';\r\nimport { Action } from 'redux';\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number> // array of users ids\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nconst usersReducer = (state = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch(action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state, \r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\r\n            }\r\n\r\n        case 'UNFOLLOW': \r\n            return {\r\n                ...state, \r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\r\n                // users: state.users.map( u => {\r\n                //     if(u.id === action.userId) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n\r\n        case 'SET_USERS':\r\n            return { ...state, users: action.users }\r\n        case 'SET_CURRENT_PAGE': \r\n            return { ...state, currentPage: action.currentPage }\r\n        case 'SET_TOTAL_USERS_COUNT': \r\n            return { ...state, totalUsersCount: action.count }\r\n        case 'TOGGLE_IS_FETCHING':\r\n            return { ...state, isFetching: action.isFetching }\r\n        case 'TOGGLE_IS_FOLLOWING_PROGRESS': \r\n            return { \r\n                ...state, \r\n                followingInProgress: action.isFetching \r\n                ? [...state.followingInProgress, action.userId] \r\n                : state.followingInProgress.filter(id => id !== action.userId) \r\n            }\r\n        default:\r\n            return state; \r\n    }\r\n}\r\n\r\ntype ActionsTypes = InferActionsTypes<typeof actions>\r\n\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({ type: 'FOLLOW', userId } as const),\r\n    unfollowSuccess: (userId: number) => ({ type: 'UNFOLLOW', userId } as const),\r\n    setUsers: (users: Array<UserType>)=> ({ type: 'SET_USERS', users } as const),\r\n    setCurrentPage: (currentPage: number) => ({ type: 'SET_CURRENT_PAGE', currentPage } as const),\r\n    setTotalUsersCount: (totalUsersCount: number) => ({ type: 'SET_TOTAL_USERS_COUNT', count: totalUsersCount } as const),\r\n    toggleIsFetching: (isFetching: boolean) => ({type: 'TOGGLE_IS_FETCHING', isFetching } as const),\r\n    toggleFollowingProgress: (isFetching: boolean, userId: null) => ({type: 'TOGGLE_IS_FOLLOWING_PROGRESS', isFetching, userId } as const)\r\n}\r\n\r\ntype GetStateType = () => AppStateType\r\ntype DispatchType = Dispatch<ActionsTypes>\r\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsTypes>\r\n\r\nexport const getUsersThunkCreator = (page: number, pageSize: number): ThunkType => {\r\n    return async (dispatch: DispatchType, getState: GetStateType) => {\r\n        // dispatch(actions.toggleIsFetching(true));\r\n        dispatch(actions.setCurrentPage(page))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize);\r\n        dispatch(actions.toggleIsFetching(false));\r\n        dispatch(actions.setUsers(data.items));\r\n        dispatch(actions.setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        let apiMethod = await usersAPI.follow.bind(usersAPI);\r\n        _followUnfollowFlow(dispatch, userId, apiMethod, actions.followSuccess);\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        let apiMethod = await usersAPI.unfollow.bind(usersAPI);\r\n        _followUnfollowFlow(dispatch, userId, apiMethod, actions.unfollowSuccess);\r\n    }\r\n}\r\n\r\nconst _followUnfollowFlow = async (dispatch: DispatchType, \r\n                                    userId: number, \r\n                                    apiMethod: any, \r\n                                    actionCreator: (userId: number) => ActionsTypes) => {\r\n        dispatch(actions.toggleFollowingProgress(true, userId));\r\n        let data = await apiMethod(userId);\r\n        if(data.resultCode === 0) {\r\n            dispatch(actionCreator(userId)); \r\n        }\r\n        dispatch(actions.toggleFollowingProgress(false, userId));\r\n}\r\n\r\n\r\nexport default usersReducer;","E:\\project\\my-social-network\\src\\redux\\sidebarReducer.ts",[],"E:\\project\\my-social-network\\src\\components\\common\\Paginator\\Paginator.tsx",[],"E:\\project\\my-social-network\\src\\redux\\redux-store.ts",["224"],"import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport appReducer from \"./appReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({ // my state\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\ntype PropertiesTypes<T> = T extends {[key: string]: infer U} ? U : never\r\n\r\nexport type InferActionsTypes<T extends {[key: string]: (...args: any[]) => any}> =  ReturnType<PropertiesTypes<T>>\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSIONS_COMPOSE__ || compose\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware))\r\n// @ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport default store","E:\\project\\my-social-network\\src\\components\\Login\\Login.tsx",["225"],"import React from 'react';\r\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { createField, Input } from '../common/FormsControls/FormsControls';\r\nimport { connect } from 'react-redux';\r\nimport {login} from '../../redux/authReducer';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport style from \"./../common/FormsControls/FormControls.module.css\";\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField<LoginFormValuesTypeKeys>(\"Email\", \"email\", [required], Input)}\r\n            {createField<LoginFormValuesTypeKeys>(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField<LoginFormValuesTypeKeys>(undefined, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n            {error && <div className={style.formSummaryError}>\r\n                {error }\r\n            </div>}\r\n            <div>\r\n                <button> Log in </button>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType>({form: 'login'})(LoginForm);\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    login: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\nexport type LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype LoginFormValuesTypeKeys = Extract<keyof LoginFormValuesType, string>\r\n\r\nconst Login: React.FC<MapStatePropsType & MapDispatchPropsType> = (props) => {\r\n    const onSubmit = (formData: any) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>login page</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} />\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\nexport default connect(mapStateToProps, {login})(Login);","E:\\project\\my-social-network\\src\\utils\\validators\\validators.ts",[],"E:\\project\\my-social-network\\src\\components\\common\\FormsControls\\FormsControls.tsx",[],"E:\\project\\my-social-network\\src\\api\\api.ts",[],"E:\\project\\my-social-network\\src\\components\\Users\\UsersContainer.tsx",[],"E:\\project\\my-social-network\\src\\redux\\usersSelectors.ts",[],"E:\\project\\my-social-network\\src\\components\\Users\\Users.tsx",[],"E:\\project\\my-social-network\\src\\components\\Users\\User.tsx",[],{"ruleId":"226","replacedBy":"227"},{"ruleId":"228","replacedBy":"229"},{"ruleId":"230","severity":1,"message":"231","line":1,"column":8,"nodeType":"232","messageId":"233","endLine":1,"endColumn":12},{"ruleId":"234","severity":1,"message":"235","line":5,"column":9,"nodeType":"236","endLine":5,"endColumn":121},{"ruleId":"237","severity":1,"message":"238","line":6,"column":13,"nodeType":"236","endLine":6,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":9,"column":13,"nodeType":"236","endLine":9,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":12,"column":13,"nodeType":"236","endLine":12,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":15,"column":13,"nodeType":"236","endLine":15,"endColumn":16},{"ruleId":"237","severity":1,"message":"238","line":18,"column":13,"nodeType":"236","endLine":18,"endColumn":16},{"ruleId":"234","severity":1,"message":"235","line":5,"column":13,"nodeType":"236","endLine":5,"endColumn":113},{"ruleId":"226","replacedBy":"239"},{"ruleId":"228","replacedBy":"240"},{"ruleId":"226","replacedBy":"241"},{"ruleId":"228","replacedBy":"242"},{"ruleId":"230","severity":1,"message":"243","line":28,"column":9,"nodeType":"232","messageId":"233","endLine":28,"endColumn":23},{"ruleId":"230","severity":1,"message":"244","line":33,"column":9,"nodeType":"232","messageId":"233","endLine":33,"endColumn":23},{"ruleId":"226","replacedBy":"245"},{"ruleId":"228","replacedBy":"246"},{"ruleId":"230","severity":1,"message":"247","line":6,"column":10,"nodeType":"232","messageId":"233","endLine":6,"endColumn":18},{"ruleId":"248","severity":1,"message":"249","line":27,"column":12,"nodeType":"250","messageId":"251","endLine":27,"endColumn":76},{"ruleId":"252","severity":1,"message":"253","line":27,"column":43,"nodeType":"250","messageId":"254","endLine":27,"endColumn":45},{"ruleId":"230","severity":1,"message":"255","line":1,"column":10,"nodeType":"232","messageId":"233","endLine":1,"endColumn":21},{"ruleId":"226","replacedBy":"239"},{"ruleId":"228","replacedBy":"240"},{"ruleId":"256","severity":1,"message":"257","line":1,"column":22,"nodeType":"232","messageId":"233","endLine":1,"endColumn":30},{"ruleId":"256","severity":1,"message":"258","line":6,"column":23,"nodeType":"232","messageId":"233","endLine":6,"endColumn":36},{"ruleId":"256","severity":1,"message":"259","line":7,"column":10,"nodeType":"232","messageId":"233","endLine":7,"endColumn":16},{"ruleId":"256","severity":1,"message":"260","line":30,"column":7,"nodeType":"232","messageId":"233","endLine":30,"endColumn":23},{"ruleId":"256","severity":1,"message":"261","line":2,"column":10,"nodeType":"232","messageId":"233","endLine":2,"endColumn":15},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["262"],["263"],["262"],["263"],"'newPostElement' is assigned a value but never used.","'newMessageBody' is assigned a value but never used.",["262"],["263"],"'Redirect' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'actionTypes' is defined but never used.","@typescript-eslint/no-unused-vars","'usersAPI' is defined but never used.","'ThunkDispatch' is defined but never used.","'Action' is defined but never used.","'composeEnhancers' is assigned a value but never used.","'Field' is defined but never used.","no-global-assign","no-unsafe-negation"]